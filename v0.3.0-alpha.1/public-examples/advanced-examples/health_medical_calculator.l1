// Health: Medical Calculator - BMI and Health Metrics
// Real-world application for medical calculations

println("=== HEALTH: Medical Calculator ===");
println("Calculates BMI, health metrics, and medical indicators");

function calculate_bmi(weight_kg, height_m) {
    return weight_kg / (height_m * height_m);
}

function classify_bmi(bmi) {
    if (bmi < 18.5) {
        return "Underweight";
    } else if (bmi < 25.0) {
        return "Normal weight";
    } else if (bmi < 30.0) {
        return "Overweight";
    } else {
        return "Obese";
    }
}

function calculate_body_fat_percentage(weight_kg, height_m, age, gender) {
    // Simplified body fat calculation (not medically accurate, for demo)
    let bmi = calculate_bmi(weight_kg, height_m);
    let base_fat = 0.0;
    
    if (gender == "male") {
        base_fat = 1.20 * bmi + 0.23 * age - 16.2;
    } else {
        base_fat = 1.20 * bmi + 0.23 * age - 5.4;
    }
    
    if (base_fat < 0) {
        base_fat = 0;
    }
    if (base_fat > 50) {
        base_fat = 50;
    }
    
    return base_fat;
}

function calculate_ideal_weight(height_m, gender) {
    // Devine formula for ideal weight
    let ideal_kg = 0.0;
    if (gender == "male") {
        ideal_kg = 50.0 + 2.3 * ((height_m * 100.0) - 152.4) / 2.54;
    } else {
        ideal_kg = 45.5 + 2.3 * ((height_m * 100.0) - 152.4) / 2.54;
    }
    return ideal_kg;
}

function calculate_heart_rate_zones(age) {
    let max_hr = 220 - age;
    let zone1_min = max_hr * 0.5;
    let zone1_max = max_hr * 0.6;
    let zone2_min = max_hr * 0.6;
    let zone2_max = max_hr * 0.7;
    let zone3_min = max_hr * 0.7;
    let zone3_max = max_hr * 0.8;
    
    return "Zone 1 (Fat Burn): " + to_string(round(zone1_min)) + "-" + to_string(round(zone1_max)) + " bpm\n" +
           "Zone 2 (Cardio): " + to_string(round(zone2_min)) + "-" + to_string(round(zone2_max)) + " bpm\n" +
           "Zone 3 (Peak): " + to_string(round(zone3_min)) + "-" + to_string(round(zone3_max)) + " bpm";
}

function assess_health_risk(bmi, age, blood_pressure_systolic) {
    let risk_score = 0;
    
    // BMI risk factors
    if (bmi < 18.5 || bmi >= 30.0) {
        risk_score = risk_score + 2;
    } else if (bmi >= 25.0) {
        risk_score = risk_score + 1;
    }
    
    // Age risk factors
    if (age >= 65) {
        risk_score = risk_score + 3;
    } else if (age >= 45) {
        risk_score = risk_score + 2;
    } else if (age >= 35) {
        risk_score = risk_score + 1;
    }
    
    // Blood pressure risk factors
    if (blood_pressure_systolic >= 140) {
        risk_score = risk_score + 3;
    } else if (blood_pressure_systolic >= 130) {
        risk_score = risk_score + 2;
    } else if (blood_pressure_systolic >= 120) {
        risk_score = risk_score + 1;
    }
    
    let risk_level = "";
    if (risk_score <= 2) {
        risk_level = "Low risk - Continue healthy lifestyle";
    } else if (risk_score <= 4) {
        risk_level = "Moderate risk - Consider lifestyle changes";
    } else if (risk_score <= 6) {
        risk_level = "High risk - Consult healthcare provider";
    } else {
        risk_level = "Very high risk - Immediate medical attention recommended";
    }
    
    return "Risk Score: " + to_string(risk_score) + "/10 - " + risk_level;
}

// Test cases for different patients
println("");
println("=== PATIENT 1: Adult Male ===");
let weight1 = 80.0;  // kg
let height1 = 1.75;  // meters
let age1 = 35;
let bmi1 = calculate_bmi(weight1, height1);
let classification1 = classify_bmi(bmi1);
let body_fat1 = calculate_body_fat_percentage(weight1, height1, age1, "male");
let ideal_weight1 = calculate_ideal_weight(height1, "male");
let hr_zones1 = calculate_heart_rate_zones(age1);
let risk_assessment1 = assess_health_risk(bmi1, age1, 125);

println("BMI: " + to_string(round(bmi1)) + " - " + classification1);
println("Body fat: " + to_string(round(body_fat1)) + "%");
println("Ideal weight: " + to_string(round(ideal_weight1)) + " kg");
println(hr_zones1);
println(risk_assessment1);

println("");
println("=== PATIENT 2: Adult Female ===");
let weight2 = 65.0;  // kg
let height2 = 1.60;  // meters
let age2 = 28;
let bmi2 = calculate_bmi(weight2, height2);
let classification2 = classify_bmi(bmi2);
let body_fat2 = calculate_body_fat_percentage(weight2, height2, age2, "female");
let ideal_weight2 = calculate_ideal_weight(height2, "female");
let hr_zones2 = calculate_heart_rate_zones(age2);
let risk_assessment2 = assess_health_risk(bmi2, age2, 115);

println("BMI: " + to_string(round(bmi2)) + " - " + classification2);
println("Body fat: " + to_string(round(body_fat2)) + "%");
println("Ideal weight: " + to_string(round(ideal_weight2)) + " kg");
println(hr_zones2);
println(risk_assessment2);

println("");
println("=== PATIENT 3: Senior Male (High Risk) ===");
let weight3 = 95.0;  // kg
let height3 = 1.70;  // meters
let age3 = 68;
let bmi3 = calculate_bmi(weight3, height3);
let classification3 = classify_bmi(bmi3);
let body_fat3 = calculate_body_fat_percentage(weight3, height3, age3, "male");
let ideal_weight3 = calculate_ideal_weight(height3, "male");
let hr_zones3 = calculate_heart_rate_zones(age3);
let risk_assessment3 = assess_health_risk(bmi3, age3, 145);

println("BMI: " + to_string(round(bmi3)) + " - " + classification3);
println("Body fat: " + to_string(round(body_fat3)) + "%");
println("Ideal weight: " + to_string(round(ideal_weight3)) + " kg");
println(hr_zones3);
println(risk_assessment3);

println("");
println("âœ… Medical calculations completed successfully!");
