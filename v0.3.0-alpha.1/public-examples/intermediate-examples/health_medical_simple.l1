// Health: Medical Calculator - BMI and Health Metrics (Simplified)
println("=== HEALTH: Medical Calculator ===");

function calculate_bmi(weight_kg, height_m) {
    return weight_kg / (height_m * height_m);
}

function classify_bmi(bmi) {
    if (bmi < 18.5) {
        return "Underweight";
    } else if (bmi < 25.0) {
        return "Normal weight";
    } else if (bmi < 30.0) {
        return "Overweight";
    } else {
        return "Obese";
    }
}

function calculate_heart_rate_zones(age) {
    let max_hr = 220 - age;
    let zone1_min = max_hr * 0.5;
    let zone1_max = max_hr * 0.6;
    let zone2_min = max_hr * 0.6;
    let zone2_max = max_hr * 0.7;
    
    return "Zone 1 (Fat Burn): " + to_string(round(zone1_min)) + "-" + to_string(round(zone1_max)) + " bpm";
}

// Test cases
println("");
println("=== PATIENT 1: Adult Male ===");
let weight1 = 80.0;  // kg
let height1 = 1.75;  // meters
let age1 = 35;
let bmi1 = calculate_bmi(weight1, height1);
let classification1 = classify_bmi(bmi1);
let hr_zones1 = calculate_heart_rate_zones(age1);

println("BMI: " + to_string(round(bmi1)) + " - " + classification1);
println(hr_zones1);

println("");
println("=== PATIENT 2: Adult Female ===");
let weight2 = 65.0;  // kg
let height2 = 1.60;  // meters
let age2 = 28;
let bmi2 = calculate_bmi(weight2, height2);
let classification2 = classify_bmi(bmi2);
let hr_zones2 = calculate_heart_rate_zones(age2);

println("BMI: " + to_string(round(bmi2)) + " - " + classification2);
println(hr_zones2);

println("");
println("âœ… Medical calculations completed successfully!");
