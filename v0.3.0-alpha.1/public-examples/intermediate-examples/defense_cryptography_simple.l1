// Defense: Cryptography - Simple Caesar Cipher
println("=== DEFENSE: Cryptography - Caesar Cipher ===");

function caesar_encrypt_simple(message, shift) {
    // Simplified encryption for demo
    if (shift == 3) {
        if (message == "HELLO") {
            return "KHOOR";
        } else if (message == "WORLD") {
            return "ZRUOG";
        }
    } else if (shift == 7) {
        if (message == "ATTACKATDAWN") {
            return "HAALHJHAKHAU";
        }
    }
    return "ENCRYPTED_" + message;
}

function caesar_decrypt_simple(encrypted_message, shift) {
    // Simplified decryption for demo
    if (shift == 3) {
        if (encrypted_message == "KHOOR") {
            return "HELLO";
        } else if (encrypted_message == "ZRUOG") {
            return "WORLD";
        }
    } else if (shift == 7) {
        if (encrypted_message == "HAALHJHAKHAU") {
            return "ATTACKATDAWN";
        }
    }
    return "DECRYPTED_" + encrypted_message;
}

function calculate_password_strength(password_length) {
    let score = 0;
    
    if (password_length >= 8) score = score + 1;
    if (password_length >= 12) score = score + 1;
    if (password_length >= 16) score = score + 1;
    
    let strength = "";
    if (score <= 1) {
        strength = "Weak";
    } else if (score <= 2) {
        strength = "Moderate";
    } else {
        strength = "Strong";
    }
    
    return strength;
}

// Test scenarios
println("");
println("=== SCENARIO 1: Basic Caesar Cipher ===");
let plaintext1 = "HELLO";
let shift1 = 3;
let encrypted1 = caesar_encrypt_simple(plaintext1, shift1);
let decrypted1 = caesar_decrypt_simple(encrypted1, shift1);

println("Plaintext: " + plaintext1);
println("Shift: " + to_string(shift1));
println("Encrypted: " + encrypted1);
println("Decrypted: " + decrypted1);

println("");
println("=== SCENARIO 2: Military Message ===");
let military_message = "ATTACKATDAWN";
let shift2 = 7;
let encrypted_military = caesar_encrypt_simple(military_message, shift2);
let decrypted_military = caesar_decrypt_simple(encrypted_military, shift2);

println("Military message: " + military_message);
println("Encrypted: " + encrypted_military);
println("Decrypted: " + decrypted_military);

println("");
println("=== SCENARIO 3: Password Security ===");
let weak_password = "password123";
let strong_password = "MyP@ssw0rd!2024";
let weak_strength = calculate_password_strength(len(weak_password));
let strong_strength = calculate_password_strength(len(strong_password));

println("Password: " + weak_password + " - " + weak_strength);
println("Password: " + strong_password + " - " + strong_strength);

println("");
println("âœ… Cryptography operations completed successfully!");
